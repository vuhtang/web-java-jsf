import javax.sound.sampled.*

plugins {
    id 'java'
    id 'war'
}

group 'com.vuhtang'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

ext {
    junitVersion = '5.9.2'
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

dependencies {
    compileOnly('jakarta.platform:jakarta.jakartaee-api:9.1.0')
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.9.1'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.2'

    implementation group: 'javax.validation', name: 'validation-api', version: '2.0.1.Final'
    implementation group: 'javax.persistence', name: 'javax.persistence-api', version: '2.2'
    
    implementation group: 'mysql', name: 'mysql-connector-java', version: '8.0.28'
    implementation group: 'com.google.protobuf', name: 'protobuf-java', version: '3.21.7'
    implementation group: 'org.hibernate', name: 'hibernate-core', version: '5.6.10.Final'

}

test {
    useJUnitPlatform()
}


//Для музыкальной сборки
def musicFile = new File("music.wav")
AudioInputStream audioStream = AudioSystem.getAudioInputStream(musicFile)
Clip clip = AudioSystem.getClip()
clip.open(audioStream)



//Компиляция
task compileProject(type: JavaCompile) {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
    classpath = sourceSets.main.compileClasspath
    source = SRC_DIR
    destinationDirectory = file(BIN_DIR)
}

//Сборка джарника
task buildProject(type: Jar) {
    dependsOn compileProject
    manifest {
        attributes 'Main-Class': MAIN_CLASS
    }

    from(BIN_DIR) {
        include '**/*.class'
    }

    archiveFileName = JAR_NAME
    destinationDirectory = file(LIB_DIR)
}

//Чистка билда
task cleanProject(type: Delete){
    delete 'build'
}

//Музыкальная сборка джарника
task music(dependsOn: buildProject){
    doLast {
        clip.start()
    }
}
